#-- rbr-bbkk-thru.txt
#-- main branch file for Bright Brave Knight Knave walkthroughs
#
#-- use HHV.PY to verify ha-half
#-- use MCH.PY to verify mistake checking code
#-- use SCT.PY to verify alternate verb solutions
#-- use HCH.PY to verify room/thing homonyms
#--
#--

#NOTE: PRC.PY has a bug where it double-prints the text at the end if the final command fails

files=reg-bbkk-thru-min.txt,reg-bbkk-thru-all.txt,reg-bbkk-thru-reject.txt,reg-bbkk-thru-alt-verbs.txt,reg-bbkk-thru-guide-gong.txt,reg-bbkk-thru-pride-prong.txt,reg-bbkk-thru-mistakes.txt,reg-bbkk-thru-ha-half.txt,reg-bbkk-thru-homonyms.txt,reg-bbkk-thru-verbs.txt,reg-bbkk-thru-goto.txt,reg-bbkk-thru-hints.txt,reg-bbkk-thru-hintfull.txt
~	min	t0
~	all	t1
~	rej	t2
~	alt	t3
~	gong	t4
~	prong	t5
~	mis	t6
~	ha	t7
~	hom	t8
~	ver,verbs	t9
~	goto,gt,go	t10
~	hin,hint,hints	t11
~	hf,hfull	t12
##--stable-file: this eventually says that the project is stable, and I shouldn't change the main/minimal file unless I really need to.
#--strict-file: this says that the project requires strict section marking e.g. @all instead of ==t1.

}$REJECT=I couldn't parse that command. You don't need any more than two words long.
}$REJECT1=Most special commands are more than one word. VERBS will give a list of useful, non-puzzle-solving verbs.
}$REJECT1A=Most special commands are more than one word, because of the rhyme-pairs involved. VERBS will give a list of useful, non-puzzle-solving verbs.
}$REJECT2=Your rhyming attempts bring up nothing. Or, if you tried a standard verb--well, Civil Seeming Drivel Dreaming has eliminated a lot of them, so you can focus on the puzzle verbs. VERBS will give a list of useful, non-puzzle-solving verbs.
}$GREENBONUS=The HA HALF button on your Leet Learner lights up green. Very dim, though. Perhaps this is a rhyme you don't strictly need to figure to win.
}$GREENCOREFIRST=The HA HALF button on your Leet Learner lights up green--one of the words you thought must be right.
}$GREENCORE=The HA HALF button on your Leet Learner lights up green.
}$YELLOWBONUS=The HA HALF button on your Leet Learner lights up yellow. Very dim, though. Perhaps this is a rhyme you don't strictly need to figure to win.
}$YELLOWCOREFIRST=The HA HALF button on your Leet Learner lights up yellow--one of the words must work for a future solution.
}$YELLOWCORE=The HA HALF button on your Leet Learner lights up yellow.

}}MAX=28
}}CURMAX=28
}}SCORE=0
}}CURMIN=25
}}CURMINBONUS=0
}}CURMAXBONUS=3
}}MAXBONUS=3

}$SCOS=You have scored a total of {SCORE} out of {MAX} points and need {CURMIN} to win. You have found {CURMIN} of {MAXBONUS} optional points so far.
}$MISSINGONE=1 optional point is no longer available.
}$MISSING={} optional points are no longer available.

## *FILE
## *FORK

TSV:## minimum walkthrough	## walkthrough with all points	## walkthrough with all rejections and THINK	## walkthrough with altverb tests	## walkthrough testing guide gong	## walkthrough testing pride prong	## walkthrough testing all mistakes	## walkthrough testing half-right cases	## walkthrough testing homonyms	## walkthrough testing special verbs	## walkthrough testing GOTO	## walkthrough testing HINTS basic	## walkthrough testing HINTS full

** game: /home/andrew/prt/debug-bright-brave-knight-knave.z8
** interpreter: /home/andrew/prt/dfrotz -m -w5000 -h25

* main-thru

@all
#testcase-room-names-white-wave
`White Wave

@!min
>take learner
Taken.

>au 2

>kite cave
by one point

@all
#testcase-room-names-bass-bath
`Bass Bath

@!min
>write rave
by one point

@rej
>mass math
You have nothing to do mass math on. Yet.
NOTE: this command will be useful later, but you aren't ready to use it, yet. You can track commands like this by typing THINK, which will also clue you if they now work.
\\
>think
You think about more specific challenges you've encountered and not solved, and what you've done and tried, and what you can do.
You can use MASS MATH once you have something to calculate.

>pass path

@all
#testcase-room-names-bass-bath
`Pass Path

>mass math
by one point
